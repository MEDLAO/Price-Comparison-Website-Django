services:
  # Django app with Gunicorn (web server)
  web:
    image: medlao/pcwd-fromsifr:latest
    volumes:
      - static_volume:/app/staticfiles  # Static files volume (shared between Django and Nginx)
      - media_volume:/app/media  # Media files volume (shared between Django and Nginx)
      - nginx_shared:/app/nginx
    expose:
      - "8000"  # Expose port 8000 for Gunicorn
    environment:
      PROD_SECRET_KEY: "${PROD_SECRET_KEY}"
      PROD_DB_NAME: "${PROD_DB_NAME}"
      PROD_DB_USER: "${PROD_DB_USER}"
      PROD_DB_PASSWORD: "${PROD_DB_PASSWORD}"
      PROD_DB_HOST: "${PROD_DB_HOST}"
      PROD_DB_PORT: "${PROD_DB_PORT}"
      AWS_SES_EMAIL_HOST: "${AWS_SES_EMAIL_HOST}"
      AWS_SES_SMTP_USER: "${AWS_SES_SMTP_USER}"
      AWS_SES_SMTP_PASSWORD: "${AWS_SES_SMTP_PASSWORD}"
      AWS_REDIS_ENDPOINT: "${AWS_REDIS_ENDPOINT}"
      AWS_REDIS_PASSWORD: "${AWS_REDIS_PASSWORD}"
      GOOGLE_API_CLIENT_ID: "${GOOGLE_API_CLIENT_ID}"
      GOOGLE_API_SECRET: "${GOOGLE_API_SECRET}"
    command: /app/start.sh
    restart: always  # Automatically restart the container if it fails

  # Nginx web server to reverse proxy requests to Gunicorn
  nginx:
    image: nginx:latest  # Use the latest official Nginx image
    ports:
      - "80:80"  # Map port 80 for HTTP
      - "443:443"  # Map port 443 for HTTPS
    volumes:
      - static_volume:/app/staticfiles  # Serve static files
      - media_volume:/app/media  # Serve media files
      - nginx_shared:/etc/nginx/conf.d
      - /etc/letsencrypt/live/fromsifr.com/fullchain.pem:/etc/letsencrypt/live/fromsifr.com/fullchain.pem
      - /etc/letsencrypt/live/fromsifr.com/privkey.pem:/etc/letsencrypt/live/fromsifr.com/privkey.pem
    depends_on:
      - web  # Ensure Nginx starts after Gunicorn
    restart: always  # Automatically restart the container if it fails

# Define Docker volumes for static and media files
volumes:
  static_volume:  # Persistent storage for static files
  media_volume:  # Persistent storage for media files
  nginx_shared:   # Define the shared volume for nginx.conf
