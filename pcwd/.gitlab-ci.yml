stages:
#  - quality
#  - test
#  - build
  - deploy

## 1. Quality Stage: Run Flake8 linter
#quality:
#  stage: quality
#  image: python:3.10
#  script:
#    - cd pcwd
#    - pip install flake8
#    - flake8 .
#    - echo "$GOOGLE_API_CLIENT_ID"
#  allow_failure: true  # Allow this stage to fail without breaking the pipeline
#
## 2. Test Stage: Run Pytest for unit tests
#test:
#  stage: test
#  image: python:3.10
#  script:
#    - cd pcwd
#    - pip install -r requirements.txt
#    - pytest
#
## 3. Build Stage: Build Docker Image and Push to Docker Hub
#build:
#  stage: build
#  image: docker:latest
#  variables:
#    SECURE_FILES_DOWNLOAD_PATH: './pcwd/'
#  services:
#    - docker:dind  # Enable Docker commands within the runner
#  script:
#    - apk add --no-cache curl bash
#    - curl -s https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer | bash
#    - cd pcwd
#    - ls -la
#    - echo "$DOCKER_HUB_REGISTRY_PASSWORD" | docker login -u "$DOCKER_HUB_REGISTRY_USER" --password-stdin
#    - docker build --no-cache -t $DOCKER_IMAGE_NAME:latest .
#    - docker tag $DOCKER_IMAGE_NAME:latest $DOCKER_HUB_REGISTRY_IMAGE:latest
#    - docker push $DOCKER_HUB_REGISTRY_IMAGE:latest

# 4. Deploy Stage: Deploy to AWS EC2 using SSH and Docker Compose
deploy:
  stage: deploy
  image: docker:latest
  before_script:
    - apk add --no-cache openssh-client
    - apk add --no-cache docker-compose
    - apk add --no-cache aws-cli
    - echo "$DOCKER_HUB_REGISTRY_PASSWORD" | docker login -u "$DOCKER_HUB_REGISTRY_USER" --password-stdin
    # Create private key file and set appropriate permissions
    - echo "$EC2_SSH_PRIVATE_KEY" > /tmp/private_key.pem
    - chmod 600 /tmp/private_key.pem  # Set correct permissions
  script:
    - cd pcwd
    - ls
    # Copy docker-compose.yml to the EC2 instance
    - scp -o StrictHostKeyChecking=no -i /tmp/private_key.pem docker-compose.yml ubuntu@$EC2_INSTANCE:/home/ubuntu/
    # SSH into the EC2 instance and deploy using Docker Compose
    - ssh -o StrictHostKeyChecking=no -i /tmp/private_key.pem ubuntu@$EC2_INSTANCE 'cd /home/ubuntu && sudo docker-compose pull web && sudo docker-compose down && sudo docker-compose up -d'
  only:
    - master
